Welcome to "At Home Modifier" hack of xf86-input-evdev.  The original
README is moved to README.orig.

Contents
========
* What it is
* Web site
* Get it
* Usage
* Limitations
* Author
* Bugs, Wish list
* Random bits
* History
* Copyright

What it is
==========
It enables for example "shift/space dual role key." When you press the
space key alone, it's a space; but when you press it with another key,
it's a shift. Any pairs of keys are possible. It is a fork of evdev
driver = xf86-input-evdev.

With this hack, your hands can stay at the home position almost
always, and feel more "at home", thus "At Home Modifier".

More precisely, you specify pairs of two keycodes, the "original", and
the "translated". The last event gets recorded in this patch.  After
the press of one of "original" keys, the driver instead reports a
tranlated key press event. When an original key is released, it sends
a release of the tranlated key. And it sends a press and release of
the original key if necessary, judging from the last event.

Web site
========
http://gitorious.org/at-home-modifier/pages/Home

Get it
======

Download
--------
The tar.gz is here:
http://gitorious.org/at-home-modifier/download/blobs/raw/master/source/ahm-2.6.0.tar.gz

You can also download the patch against the xf86-input-evdev from the
website.

git
---
Git access is available, too. For the first time, install git, and clone as
  $ cd some/dir
  $ git clone git://gitorious.org/at-home-modifier/at-home-modifier.git

You can receive updates by
  $ cd some/dir/at-home-modifier
  $ git pull

Version tags
------------
  $ git tag -l "ahm*"
lists all releases, like ahm-2.5.1.

You can see the difference to the original code by:
  $ git diff xf86-input-evdev-2.5.0..ahm-2.5.0

Install
-------
* Gentoo Linux users can use the ebuild file. Get it from the web site.
* Arch Linux AUR repository entry is:
  https://aur.archlinux.org/packages.php?ID=49546

Other Linux users can install it by replacing xf86-input-evdev.
I'd appreciate it a lot if you could send me your distro support.

Usage
=====
First, know the keycodes you need, which are numbers assigned to each
physical key. It's easiest to install and invoke "xev" commands. It
says space is 65, and left shift is 50. Ok. Then write your xorg.conf:

  Section "InputClass"
    Identifier "my keyboard"
    Driver "evdev"
    Option "XKBOptions" "terminate:ctrl_alt_bksp" # and so on

    # If you save this file under xorg.conf.d/ :
    Option "AutoServerLayout" "on"

    MatchIsKeyboard "on"
    Option "TransMod" "65:50" # *** Look here ***
  EndSection

Of course, you can use any keys. "d" & "k" (and so on) may be good.
(When you want to capitalize the left-hand keys, press "k", and "d"
for right-hands. This may sound too complex, but you'll be soon
accustomed.) If you want to specify multiple pairs, seperate them
with whitespaces, like this:

  Option "TransMod" "65:240 102:241 100:241"

Don't forget to restart X!

The bottom row of my keyboard is Esc-BS-Spc-Ret-Tab with the overlay
Alt-Shift-Ctrl-Shift-Alt. (Japanese keyboards have many keys you can
press with thumbs.)

More on keycodes
----------------
It's good to know that you can also tell keycodes by looking at
/usr/share/X11/xkb/keycodes/evdev in order to customize the keyboard
layout with XKB. For example that file says:

    <SPCE> = 65;
    ...
    <LFSH> = 50;

Ok, but what's this?
    <AE02> = 11;

Hm, if you use for example Italian layout, see
/usr/share/X11/xkb/symbols/it. It has lines:

  xkb_symbols "basic" {
   ...
   key <AE02>  { [         2,   quotedbl,  twosuperior, dead_doubleacute ] };
   ...
  }

  xkb_symbols "nodeadkeys" {
    // Modifies the basic italian layout to eliminate all dead keys
    ...
    key <AE02>  { [         2,   quotedbl,  twosuperior,  doubleacute ] };
    ...
  }

Aha, so that key is basically "2".

Please!
-------
If you think this fork is good, please tell it to others, at blog,
forum, etc. If it doesn't become popular, it remains my personal hack,
and it may soon become impossible for me to maintain!

Please give your feedback at the project web site. The host site
doesn't provide an access counter, so I can't measure the popularity.

Limitations
===========
Each device is unaware of others. If you press your translated shift
with a left click, it works as shift, but the original key event is
generated after it too.

This is a mere hack. The correct way will be to implement this in
"XKB2", which is not yet put into Xorg. If you want this to be
merged in Xorg, please help X input driver developers.

See also bugs and "not a bug" sections below.

Author
======
Teika kazura <teika ahm-is-great at lavabit ahm-is-great dot com>

Delete "ahm-is-great" in the address.

It's good *not* to trust authors you find on the Web. You may be
reassured to know that I'm a developer of Sawfish window manager:
  http://sawfish.wikia.com/wiki/User:Teika_kazura

Maintainer wanted
-----------------
Please, take me over.

Bugs, Wish list
===============

Fixed bugs
----------
* In 2.6.0;
  "Double shift bug": Suppose both key a and b are translated to
  shift. Press a, b, and release b.  Then it should be 'B', but it
  used to emit lower b. It's because the release of shift was sent
  before b key press.

Known bugs
---------
* Hotplug failure: Sometimes modifiers get locked immediately after
  hotplugging a keyboard. Try replug, or s2ram may fix.

Not a bug
---------
Many keyboards fail to send some combinations of key presses. For
example, mine doesn't report Left-alt + space + cursor-down and
alt + space + delete (whereas alt + space + up is dispatched!!)
All normal symbol keys pressed with alt + space work.

Keyboards with "n-key rollover" are the solution, and completely ok
for this hack, but they may be expensive. (USB connection can't report
7 or more simultaneous presses, but it doesn't matter for us.)

Wishes
------
* "Fast type support": Suppose you press space/shift, meaning as a
  space. If you type too fast, the next key, say lower x, becomes X.
  It may be better if it's recognized as x when the space/shift is
  released before x.
  I may write a fix.

Random bits
===========

Will this patch speed up typing?
--------------------------------
In my case, it didn't. But I (or my hands) feel far better and I can't
do without this patch any more. It's less tiring, so it may be more
efficient if you use keyboard for long time in a day.

In fact, it slows down a bit. Fast succesive typing sometimes
turns the space into a modifier. And I press the space to use as a
modifier, but I change my mind, and release it, and there comes an
unwanted space.

Warning: Health issue
---------------------
This hack is likely to reduce the use of your pinkies, and the risk of
their injury like RSI. However, overuse of keyboards can damage *any*
digits and other parts of your hand, although pinkies are most
vulnerable.

Good keyboards
--------------
If you can buy a Japanese keyboard, I recommend one. The Japanese
keyboard is a "cheap Kinesis"; the space key is short, and there're
keys around the space key which can be easily pressed with thumbs.
(Have you ever heard of Kinesis Contoured Keyboard?) See for example
http://en.wikipedia.org/wiki/Keyboard_layout

But it's only the layout. I can't assure the overall quality. Of course
it's better to try before you buy.

"Realforce" keyboard made by Topre is unique with capacitive key
switch whose touch is really soft. "HHK Professional" (HHK = Happy
Hacking Keyboard) also uses Topre's switch.

See also "not a bug" section above. Kinesis contoured, Realforce and
HHK Professional come with n-key rollover.

FYI: mine is OWL-KB86STD made by Owltech.

History
=======

Versions
--------
* 2.6.0 (apr 2011): Merged upstrem 2.6.0. "Double shift bug" is fixed.
* 2.5.1 (feb 2011): Minor documentation updates.
* 2.5.0 (feb 2011): Initial release. Forked from upstream 2.5.0 = xf86-input-evdev-2.5.0.

Background
----------
What was proposed origially was called "SandS" - stands for "Space and
Shift" - which dates back to year 2001, by K. Kimura.[1] There's
implementations in Mac and Win.

In 2008 T. Matsuyama implemented it for X keyboard driver.[2] Then
came a port to evdev driver by "jeneshicc".[3] But they lack
generality; you can only use physical shift, alt, and space keys. My
code is based on the last patch.

[1] (Japanese) http://hp.vector.co.jp/authors/VA002116/
[2] (Japanese)
http://dev.ariel-networks.com/Members/matsuyama/keyboard-customize
[3] (Japanese):
http://d.hatena.ne.jp/jeneshicc/20100306/1267843799

License
=======
Distributed under MIT License; Same as Xorg.
